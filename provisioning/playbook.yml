---
- name: Ansible host
  hosts: ctl
  connection: local
  tasks:
    - name: Configure SSH access
      template:
        src: "{{ playbook_dir }}/templates/ssh-config.j2"
        dest: /home/vagrant/.ssh/config
        owner: vagrant
        group: vagrant
        mode: '0600'

- hosts: all
  become: yes
  strategy: free
  gather_facts: yes
  tasks:
    - name: Prevent kernel from being upgraded
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items:
        - "linux-image-{{ ansible_kernel }}"
        - "linux-modules-{{ ansible_kernel }}"
        - "linux-modules-extra-{{ ansible_kernel }}"
      tags: apt

    - name: Set host name resolution
      template:
        src: "{{ playbook_dir }}/templates/hosts.j2"
        dest: /etc/hosts

    - name: Configure SSH access
      template:
        src: "{{ playbook_dir }}/templates/ssh-config.j2"
        dest: /home/vagrant/.ssh/config
        owner: vagrant
        group: vagrant
        mode: '0600'

    - name: Adding vagrant user to group systemd-journal
      user:
        name: vagrant
        groups: systemd-journal
        append: yes

- hosts: cluster
  become: yes
  strategy: free
  tasks:
    - name: Remove apt lock file
      file:
        state: absent
        path: "/var/lib/dpkg/lock-frontend"
      become: true
      tags: apt

    - name: Preliminary installation
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - gnupg-agent
          - software-properties-common
          - curl
        update_cache: yes
        state: present
      tags: apt

    - name: Add the Google signing key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      tags: apt

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags: apt

    - name: Add the k8s APT repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        filename: 'kubernetes'
        state: present
      tags: apt

    - name: Add Docker apt repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        filename: 'docker'
        state: present
      tags: apt

    - name: Install packages
      apt:
        name:
          - bash-completion
          - "docker-ce=18.06.2~ce~3-0~ubuntu"
          - ebtables
          - ethtool
          - kubeadm
          - kubelet
          - kubernetes-cni
          - socat
          - vim
        state: present
        force: yes
      tags: apt

    - name: Setup docker daemon
      template:
        src: "{{ playbook_dir }}/templates/docker-daemon.json"
        dest: /etc/docker/daemon.json

    - name: Create necessary docker directory
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        recurse: yes

    - name: Restart service docker
      systemd:
        state: restarted
        daemon_reload: yes
        name: docker
        no_block: yes

    - name: Configure iptables to receive bridged network traffic
      template:
        src: "{{ playbook_dir }}/templates/kubernetes-cri.conf"
        dest: /etc/sysctl.d/99-kubernetes-cri.conf

    - name: Configure the kubeadm completion code for bash
      lineinfile:
        path: /home/vagrant/.bashrc
        line: "source <(kubeadm completion bash)"
        state: present

    - name: Load bridge-netfilter module
      shell: modprobe br_netfilter

    - name: Setup bridge-netfilter module
      template:
        src: "{{ playbook_dir }}/templates/br_netfilter.conf"
        dest: /etc/modules-load.d/br_netfilter.conf

    # hold docker-ce to use latest know and documented version
    # and avoid kubernetes warnings
    - name: Upgrade all packages to the latest version
      shell: "apt-mark hold docker-ce && apt-get upgrade --quiet --yes"
      tags: apt

    - name: Remove useless packages from the cache
      apt:
        autoclean: yes
      tags: apt

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes
      tags: apt

    - name: Disable swap for current session
      shell: swapoff -a

    - name: Disable swap permanently
      replace:
        path: /etc/fstab
        regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
        replace: '#\1\2\3swap\4'
        backup: yes

    - name: Adding vagrant user to group docker
      user:
        name: vagrant
        groups: docker
        append: yes

- hosts: master
  become: yes
  strategy: free
  tasks:
    - name: Create necessary directories if they don't exist
      file:
        path: /etc/kubernetes/manifests
        state: directory
        recurse: yes

    - name: Create addon-manager pod on master node
      template:
        src: "{{ playbook_dir }}/templates/addon-manager.yml"
        dest: /etc/kubernetes/manifests/kube-addon-manager.yaml

    - name: Remove apt lock file
      file:
        state: absent
        path: "/var/lib/dpkg/lock-frontend"
      become: true
      tags: apt

    - name: Install kubectl
      apt:
        name:
          - kubectl
        update_cache: yes
        state: present
        force: yes
      tags: apt

    - name: Configure the kubectl completion code for bash
      lineinfile:
        path: /home/vagrant/.bashrc
        line: "source <(kubectl completion bash)"
        state: present

    - name: Pulling images required for setting up a Kubernetes cluster
      shell: "kubeadm config images pull"

    - name: Bootstrap Kubernetes control-plane node
      shell: "kubeadm init --apiserver-advertise-address={{ ansible_host }} --pod-network-cidr=192.168.0.0/16 >> {{ ansible_hostname }}-cluster.log"
      args:
        chdir: /vagrant/logs
        creates: "{{ ansible_hostname }}-cluster.log"

    - name: Create .kube directory
      become: yes
      become_user: vagrant
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: Copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: yes
        owner: vagrant

    - name: Install Pod network Add-On
      become: yes
      become_user: vagrant
      shell: "kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml >> {{ ansible_hostname }}-network.log"
      args:
        chdir: /vagrant/logs
        creates: "{{ ansible_hostname }}-network.log"

    - name: Install Dashboard Add-On
      become: yes
      become_user: vagrant
      shell: "kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml >> {{ ansible_hostname }}-dashboard.log"
      args:
        chdir: /vagrant/logs
        creates: "{{ ansible_hostname }}-dashboard.log"

- name: Setting up joining to the Kubernetes cluster
  hosts: master
  become: yes
  gather_facts: false
  tasks:
    - name: Get cluster join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Set cluster join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }} --ignore-preflight-errors=all"

- name: Join to the Kubernetes cluster
  hosts: workers
  become: yes
  tasks:
    - name: Join to cluster
      shell: "{{ hostvars[groups['master'][0]].join_command }} >> {{ ansible_hostname }}-joined.log"
      args:
        chdir: /vagrant/logs
        creates: "{{ ansible_hostname }}-joined.log"
