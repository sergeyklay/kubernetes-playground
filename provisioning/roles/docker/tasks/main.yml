---
# TODO: Make it better
- name: Grab DNS server from resolv.conf
  shell: "grep -E '^nameserver ([0-9]{1,3}\\.){1,3}[0-9]{1,3}$' /etc/resolv.conf | cut -d' ' -f2"
  register: found_dns

- name: Set DNS server for docker
  set_fact:
    docker_dns_servers: "{{ [found_dns.stdout|ipaddr|default(ansible_default_ipv4.gateway)] }}"

- name: Add Google DNS servers
  set_fact:
    docker_dns_servers: "{{ docker_dns_servers + ['8.8.8.8'|ipaddr] }}"

- name: Docker DNS servers
  debug:
    msg: "{{ docker_dns_servers }}"

- name: Add Docker's official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags: apt

- name: Add Docker apt repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    filename: 'docker'
    state: present
  tags: apt

- name: Install packages
  apt:
    name: 'docker-ce=18.06.2~ce~3-0~ubuntu'
    state: present
    force: yes
  tags: apt

- name: Prevent docker from being upgraded
  dpkg_selections:
    name: docker-ce
    selection: hold
  tags: apt

- name: Create docker service systemd directory if it doesn't exist
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Ensure docker data root folder exists
  file:
    path: "{{ docker_data_root }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Write docker options systemd drop-in
  template:
    src: docker-options.conf.j2
    dest: /etc/systemd/system/docker.service.d/docker-options.conf
  register: docker_options

- name: Write docker dns systemd drop-in
  template:
    src: docker-dns.conf.j2
    dest: /etc/systemd/system/docker.service.d/docker-dns.conf
  register: docker_dns

- name: Write docker unit systemd drop-in
  template:
    src: docker.service.j2
    dest: /lib/systemd/system/docker.service
  register: docker_unit

- name: Populate service facts
  service_facts:

- name: Restart docker service
  systemd:
    state: restarted
    daemon_reload: yes
    name: docker
    no_block: yes
  when: docker_options.changed or
        docker_unit.changed or
        docker_dns.changed

- name: Restart kubelet service
  systemd:
    state: restarted
    daemon_reload: yes
    name: kubelet
    no_block: yes
  when:
    - "'kubelet.service' in services"
    - docker_options.changed or
      docker_unit.changed or
      docker_dns.changed

- name: Adding regular user to docker group
  user:
    name: "{{ regular_user }}"
    groups: docker
    append: yes
